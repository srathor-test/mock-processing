swagger: '2.0'
info:
  description: Mock Store
  version: '1.0'
  title: Mock Store
  contact: {}
host: 'localhost:8080'
basePath: /

paths:
  /catalog:
    get:
      tags:
        - transactions
      summary: '?merchantId={merchantId}'
      description: Returns a map of status codes to quantities
      operationId: catalogGet
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: merchantId
          in: query
          description: merchant id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/MerchantInventoryItem'
        '400':
          description: Invalid Order
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/catalog/{merchantId}':
    post:
      tags:
        - transactions
      summary: catalogPost
      description: Returns a map of status codes to quantities
      operationId: catalogPost
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: merchantId
          in: path
          description: merchant id
          required: true
          type: string
        - in: body
          name: item
          description: order placed for purchasing the pet
          required: true
          schema:
            $ref: '#/definitions/Item'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ModelApiResponse'
        '201':
          description: Created
        '400':
          description: Invalid Order
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /transaction/receive:
    post:
      tags:
        - transactions
      summary: transactions
      operationId: transactionsPost
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: correlationId
          in: header
          description: correlationId
          required: true
          type: string
        - in: body
          name: transaction
          description: order placed for purchasing the pet
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ModelApiResponse'
        '201':
          description: Created
        '400':
          description: Invalid Order
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /transaction/retrieve:
    get:
      tags:
        - transactions
      summary: '?transactionId={transactionId}&merchantId={merchantId} '
      operationId: transactionsGet
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: correlationId
          in: header
          description: correlationId
          required: true
          type: string
        - name: transactionId
          in: query
          description: transaction id
          required: false
          type: string
        - name: merchantId
          in: query
          description: merchant id
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Order
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  Item:
    type: object
    required:
      - itemId
    properties:
      itemCount:
        type: string
      itemId:
        type: string
  ModelApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      type:
        type: string
  Transaction:
    type: object
    required:
      - cardCsv
      - cardExpirydate
      - items
      - merchantId
      - transactionAmount
      - transactionCurrency
      - transactionId
    properties:
      cardCsv:
        type: string
        example: '123'
      cardExpirydate:
        type: string
        example: 01/27
      cardNumber:
        type: string
      items:
        type: array
        items:
          $ref: '#/definitions/Item'
      merchantId:
        type: string
      transactionAmount:
        type: string
      transactionCurrency:
        type: string
        example: AUD
      transactionId:
        type: string
 
  MerchantInventoryItem:
    type: "object"
    required: 
    - "merchantId"
    properties:
      merchantId:
        type: "integer"
        format: "int64"
      itemId:
        type: "integer"
        format: "int64"
      itemCount:
        type: "integer"
        format: "int64"

