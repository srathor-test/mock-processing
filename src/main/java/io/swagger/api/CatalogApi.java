/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.15).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Item;
import io.swagger.model.MerchantInventory;
import io.swagger.model.ModelApiResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import app.exception.BusinessException;

import javax.validation.Valid;
import javax.validation.constraints.Pattern;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-09-12T06:37:24.371Z")

@Api(value = "catalog", description = "the catalog API")
@RequestMapping(value = "")
public interface CatalogApi {

    @ApiOperation(value = "?merchantId={merchantId}", nickname = "catalogGet", 
    		notes = "Returns a map of status codes to quantities", response = MerchantInventory.class
    		, tags={ "transactions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = MerchantInventory.class),
        @ApiResponse(code = 400, message = "Invalid Order") })
    @RequestMapping(value = "/catalog",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<MerchantInventory> catalogGet(
    		@ApiParam(value = "merchant id") @Valid 
    		@Pattern(regexp = "^[0-9]{1,9}$", message = "{query.merchantId.pattern}") 
    		@RequestParam(value = "merchantId", required = false) String merchantId);


    @ApiOperation(value = "", nickname = "catalogPost"
    		, notes = "Returns a map of status codes to quantities", response = ModelApiResponse.class
    		, tags={ "transactions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ModelApiResponse.class),
        @ApiResponse(code = 400, message = "Invalid Order") })
    @RequestMapping(value = "/catalog/{merchantId}",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Item> catalogPost(
    		@ApiParam(value = "merchant id",required=true) @Pattern(regexp = "^[0-9]{1,9}$"
    		, message = "{path.merchantId.pattern}") 
    		@PathVariable("merchantId") String merchantId,
    		@ApiParam(value = "order placed for purchasing the pet" ,required=true ) 
    		@Valid @RequestBody Item body);

}
