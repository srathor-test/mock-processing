/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.15).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ModelApiResponse;
import io.swagger.model.Transaction;
import io.swagger.model.Transactions;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.List;

import javax.validation.Valid;
import javax.validation.constraints.Pattern;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-09-12T06:37:24.371Z")

@Api(value = "transaction", description = "the transaction API")
@RequestMapping(value = "")
public interface TransactionApi {

	@ApiOperation(value = "", nickname = "transactionsPost", notes = ""
			, response = ModelApiResponse.class, tags={ "transactions", })
	@ApiResponses(value = { 
			@ApiResponse(code = 200, message = "successful operation", response = ModelApiResponse.class),
			@ApiResponse(code = 400, message = "Invalid Order") })
	@RequestMapping(value = "/transaction/receive",
	produces = { "application/json" }, 
	consumes = { "application/json" },
	method = RequestMethod.POST)
	ResponseEntity<ModelApiResponse> transactions(			
			@ApiParam(value = "" ,required=true) @RequestHeader(value="correlationId", required=true) String correlationId,
			@ApiParam(value = "order placed for purchasing the pet" ,required=true )  @Valid @RequestBody Transaction body);


	@ApiOperation(value = "?transactionId={transactionId}&merchantId={merchantId} "
			, nickname = "transactionsGet", notes = "", response = Transactions.class
			, tags={ "transactions", })
	@ApiResponses(value = { 
			@ApiResponse(code = 200, message = "successful operation", response = Transactions.class),
			@ApiResponse(code = 400, message = "Invalid Order") })
	@RequestMapping(value = "/transaction/retrieve",
	produces = { "application/json" }, 
	consumes = { "application/json" },
	method = RequestMethod.GET)
	ResponseEntity<List<Transaction>> transactionsGet(			
			@ApiParam(value = "" ,required=true) @RequestHeader(value="correlationId", required=true) String correlationId,
			@ApiParam(value = "transaction id") @Validated @Pattern(regexp = "^[0-9]{1,20}$", message = "{query.transactionId.pattern}")
			@RequestParam(value = "transactionId", required = false) String transactionId,
			@ApiParam(value = "merchant id")  @Validated @Pattern(regexp = "^[0-9]{1,9}$", message = "{query.merchantId.pattern}")
			@RequestParam(value = "merchantId", required = false) String merchantId);

}
